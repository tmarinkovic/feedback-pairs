{"version":3,"sources":["../node_modules/encoding/lib sync","reducer/reducer.js","component/feedback-participants/feedbackParticipants.js","component/pair/pair.js","component/session/session.js","component/schedule/schedule.js","component/loading/loading.js","component/notification/notification.js","functions/macher/Matcher.js","sessionFactory.js","App.js","functions/colors-manager/colorsManager.js","reportWebVitals.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","ADD_PARTICIPANT","REMOVE_PARTICIPANT","STORE_ZOOM_CODE","STORE_SESSION_ID","SESSION_FETCHED","initState","participants","sessionFetched","Reducer","state","action","type","zoomCode","sessionId","participant","indexOfParticipantToRemove","indexOf","splice","FeedbackParticipants","useStyles","makeStyles","input","borderBottom","color","chip","background","useSelector","classes","dispatch","useDispatch","ChipInputLabel","className","label","value","onAdd","handleAddChip","onDelete","index","handleDeleteChip","Pair","pair","colors","Grid","item","xs","sm","md","lg","xl","Paper","style","Session","session","sessionNumber","container","map","Schedule","schedule","Loading","display","CircularProgress","Notification","notification","setNotification","handleClose","Snackbar","onClose","anchorOrigin","vertical","horizontal","autoHideDuration","open","show","Alert","severity","text","matcher","tryouts","matchedPairs","tryCounterPairs","length","push","sessionsPerTurn","numberOfTurns","pairs","i","j","createPairs","Promise","reject","originalPairs","tempPairs","possibleSession","alreadyAddedParticipant","randomPairIndex","Math","floor","random","includes","undefined","createSessions","then","result","catch","error","uuidv4","require","v4","fetchUrl","backendURL","getZoomCodeFromUrl","URLSearchParams","window","location","search","get","storeSession","putMethod","method","headers","payload","JSON","stringify","meta","body","console","log","toString","initializeSessions","configurePairs","fetchSessionIfSessionIdIsSet","storeZoomCodeIfPreset","queryParameters","history","replaceState","pathname","response","parse","S","flat","fetchSession","App","useState","setPairs","participantColors","setParticipantColors","displayNotification","setDisplayNotification","assignedColors","colorList","counter","forEach","getParticipantColors","src","process","alt","Button","variant","onClick","setTimeout","_","document","appendChild","createElement","focus","select","execCommand","parentNode","removeChild","scrollTo","onShareButtonClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.66f268f1.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 227;","export const ADD_PARTICIPANT = \"UPDATE_PARTICIPANTS\"\nexport const REMOVE_PARTICIPANT = \"REMOVE_PARTICIPANTS\"\nexport const STORE_ZOOM_CODE = \"STORE_ZOOM_CODE\"\nexport const STORE_SESSION_ID = \"STORE_SESSION_ID\"\nexport const SESSION_FETCHED = \"SESSION_FETCHED\"\n\n\nconst initState = {\n    participants: [],\n    sessionFetched: false\n}\n\nconst Reducer = (state = initState, action) => {\n    switch (action.type) {\n\n        case STORE_ZOOM_CODE:\n            return {\n                ...state,\n                zoomCode: action.zoomCode\n            }\n\n        case SESSION_FETCHED:\n            return {\n                ...state,\n                sessionFetched: true\n            }\n\n        case STORE_SESSION_ID:\n            return {\n                ...state,\n                sessionId: action.sessionId\n            }\n\n        case ADD_PARTICIPANT:\n            return {\n                ...state,\n                participants: [...state.participants, action.participant]\n            }\n\n        case REMOVE_PARTICIPANT:\n            const participants = [...state.participants]\n            const indexOfParticipantToRemove = participants.indexOf(action.participant)\n            participants.splice(indexOfParticipantToRemove, 1)\n            return {\n                ...state,\n                participants: participants\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default Reducer","import React from 'react';\nimport ChipInput from \"material-ui-chip-input\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useDispatch, useSelector} from 'react-redux'\nimport {ADD_PARTICIPANT, REMOVE_PARTICIPANT} from \"../../reducer/reducer\";\n\nexport const FeedbackParticipants = () => {\n\n    const useStyles = makeStyles({\n        input: {\n            borderBottom: '1px solid #e94560 !important',\n            color:'white'\n        },\n        chip: {\n            background: '#0f3460',\n            color: 'white',\n            '&:hover': {\n                background: \"#1958A2\",\n            },\n        },\n    });\n\n    const participants = useSelector(state => state.participants)\n    const classes = useStyles();\n    const dispatch = useDispatch()\n    const ChipInputLabel = () => <span className=\"chip-input-label\">Participants</span>\n\n    const handleAddChip = (chip) => {\n        dispatch({\n            type: ADD_PARTICIPANT,\n            participant: chip\n        })\n    }\n\n    const handleDeleteChip = (chip) => {\n        dispatch({\n            type: REMOVE_PARTICIPANT,\n            participant: chip\n        })\n    }\n\n    return (\n        <div className=\"participant-input\">\n            <ChipInput\n                label={<ChipInputLabel/>}\n                classes={{\n                    input: classes.input,\n                    chip: classes.chip\n                }}\n                value={participants}\n                onAdd={(chip) => handleAddChip(chip)}\n                onDelete={(chip, index) => handleDeleteChip(chip, index)}\n            />\n        </div>\n    )\n}","import {Grid, Paper} from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const Pair = ({pair, colors}) => {\n    return (\n        <Grid item xs={6} sm={6} md={4} lg={3} xl={3}>\n            <Paper key={`paper-${pair}`} className=\"paper\">\n                <span style={{color:colors[pair[0]]}}>{pair[0]}</span> - <span style={{color:colors[pair[1]]}}>{pair[1]}</span>\n            </Paper>\n        </Grid>\n    )\n}","import {Grid} from \"@material-ui/core\";\nimport {Pair} from \"../pair/pair\";\nimport React from \"react\";\n\nexport const Session = ({session, sessionNumber, colors}) => {\n    return (\n        <Grid className='session' item={true} container xs={12} sm={8} md={8} lg={8} xl={8}>\n            <span className=\"session-title\">{sessionNumber}</span>\n            {session.map(pair =>\n                <Pair\n                    colors = {colors}\n                    key={`pair-${pair}`}\n                    pair={pair}/>\n            )}\n        </Grid>\n    )\n}","import React from \"react\";\nimport {Session} from \"../session/session\";\n\nexport const Schedule = ({schedule, colors}) => {\n    let sessionNumber = 0\n    return (schedule.map(session => {\n        sessionNumber++\n        return <Session\n            colors = {colors}\n            key={`session-${sessionNumber}`}\n            session={session}\n            sessionNumber={sessionNumber}\n        />\n    }))\n}","import {CircularProgress} from \"@material-ui/core\";\nimport React from \"react\";\n\nexport const Loading = ({display}) => {\n\n    return (\n        <CircularProgress color=\"inherit\" className=\"loading\" style={{display: display}}/>\n    )\n}\n","import { Snackbar} from \"@material-ui/core\";\nimport React from \"react\";\nimport {Alert} from \"@material-ui/lab\";\n\nexport const Notification = ({notification, setNotification}) => {\n\n    const handleClose = () => {\n        setNotification(false,\"\")\n    };\n\n    return (\n        <Snackbar className=\"notification\" onClose={handleClose} anchorOrigin={{ vertical: 'top', horizontal: 'right' }} autoHideDuration={3000} open={notification.show} >\n            <Alert onClose={handleClose} severity=\"info\">\n                {notification.text}\n            </Alert>\n        </Snackbar>\n    )\n}","const matcher = participants => {\n\n    let tryouts = 0\n    let matchedPairs = []\n    let schedule = []\n    let tryCounterPairs = 0;\n\n    const createSessions = (pairs, sessionsPerTurn, numberOfTurns) => {\n        return new Promise((resolve, reject) => {\n            let originalPairs = [...pairs]\n\n            while (schedule.length !== numberOfTurns) {\n                let tempPairs = pairs\n                let possibleSession = []\n                let alreadyAddedParticipant = []\n                while (possibleSession.length !== sessionsPerTurn) {\n                    let randomPairIndex = Math.floor((Math.random() * pairs.length));\n                    let pair = pairs[randomPairIndex]\n                    if (matchedPairs.includes(pair)) {\n                        continue\n                    }\n                    if (\n                        pair === undefined ||\n                        alreadyAddedParticipant.includes(pair[0]) ||\n                        alreadyAddedParticipant.includes(pair[1])\n                    ) {\n                        tryCounterPairs++\n                        if (tryCounterPairs > 100) {\n                            break\n                        }\n                        continue\n                    }\n                    tryCounterPairs = 0\n                    possibleSession.push(pairs[randomPairIndex])\n                    alreadyAddedParticipant.push(pair[0])\n                    alreadyAddedParticipant.push(pair[1])\n                    tempPairs.splice(randomPairIndex, 1)\n                }\n\n                if (tryCounterPairs > 100) {\n                    tryouts++\n                    if (tryouts > 100000) {\n                        reject(new Error('Execution timed out'))\n                    }\n                    pairs = [...originalPairs]\n                    matchedPairs = []\n                    schedule = []\n                    tryCounterPairs = 0;\n                    continue\n                }\n\n                schedule.push(possibleSession)\n                pairs = tempPairs\n            }\n\n            resolve(schedule)\n        });\n    }\n\n    const createPairs = participants => {\n        let pairs = []\n        for (let i = 0; i < participants.length; i++) {\n            for (let j = i + 1; j < participants.length; j++) {\n                pairs.push([participants[i], participants[j]])\n            }\n        }\n        return pairs\n    }\n\n    return (() => {\n        if (participants.length % 2 !== 0) {\n            participants.push(\"Wait\")\n        }\n        const sessionsPerTurn = participants.length / 2\n        const numberOfTurns = participants.length - 1\n        let pairs = createPairs(participants)\n        return new Promise((resolve, reject) => {\n            createSessions(pairs, sessionsPerTurn, numberOfTurns)\n                .then(result => resolve(result))\n                .catch(error => reject(new Error(error)))\n        });\n    })()\n}\n\nexport default matcher;\n\n","import {ADD_PARTICIPANT, SESSION_FETCHED, STORE_SESSION_ID, STORE_ZOOM_CODE} from \"./reducer/reducer\";\n\nconst {v4: uuidv4} = require('uuid');\nconst fetchUrl = require(\"fetch\").fetchUrl;\nconst backendURL = \"https://widfn7ivkg.execute-api.eu-west-2.amazonaws.com/dev/session/\";\n\nconst getSessionIdFromUrl = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get('sessionId');\n}\n\nconst getZoomCodeFromUrl = () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get('code');\n}\n\nexport const storeSession = (pairs, sessionId) => {\n    const putMethod = {\n        method: 'PUT',\n        headers: {\n            'Content-type': 'application/json'\n        },\n        payload: JSON.stringify({id: sessionId, pairs})\n    }\n\n    fetchUrl(backendURL, putMethod, function (error, meta, body) {\n        console.log(body.toString())\n    })\n\n}\n\nexport const initializeSessions = (dispatch, pairs, configurePairs, state) => {\n    if (state.sessionId !== undefined) {\n        return\n    }\n    let id = getSessionIdFromUrl()\n    const zoomCode = getZoomCodeFromUrl()\n    // window.history.replaceState(null, null, window.location.pathname);\n\n    fetchSessionIfSessionIdIsSet(configurePairs, dispatch, id)\n    storeZoomCodeIfPreset(zoomCode, dispatch)\n}\n\nconst fetchSession = (configurePairs, dispatch, id) => {\n    const url = backendURL + id\n    fetchUrl(url, function (error, meta, body) {\n        const response = JSON.parse(body.toString()).response;\n        if (response === undefined) {\n            return\n        }\n        const pairs = JSON.parse(response.pairs.S)\n        if (pairs.length !== 0) {\n            configurePairs(pairs)\n            pairs[0].flat().map(participant => dispatch({\n                type: ADD_PARTICIPANT,\n                participant: participant\n            }))\n        }\n    });\n    dispatch({type: SESSION_FETCHED})\n}\n\nconst fetchSessionIfSessionIdIsSet = (configurePairs, dispatch, id) => {\n    if (id === null) {\n        id = uuidv4()\n        let queryParameters = ''\n        const zoomCode = getZoomCodeFromUrl()\n        if(zoomCode === null){\n            queryParameters = `?sessionId=${id}`\n        }\n        else{\n            queryParameters = `?code=${zoomCode}&sessionId=${id}`\n        }\n        window.history.replaceState(null, null, window.location.pathname + queryParameters);\n    } else {\n        fetchSession(configurePairs, dispatch, id)\n    }\n    dispatch({\n        type: STORE_SESSION_ID,\n        sessionId: id\n    })\n}\n\nconst storeZoomCodeIfPreset = (zoomCode, dispatch) => {\n    if (zoomCode !== null) {\n        dispatch({\n            type: STORE_ZOOM_CODE,\n            zoomCode: zoomCode\n        })\n    }\n}\n\n\n\n\n\n","import './App.css';\nimport {FeedbackParticipants} from \"./component/feedback-participants/feedbackParticipants\";\nimport {Button} from \"@material-ui/core\";\nimport React, {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Schedule} from \"./component/schedule/schedule\";\nimport {Loading} from \"./component/loading/loading\";\nimport {Notification} from \"./component/notification/notification\";\nimport {getParticipantColors} from \"./functions/colors-manager/colorsManager\";\nimport matcher from \"./functions/macher/Matcher\";\nimport {initializeSessions, storeSession} from './sessionFactory'\nimport {REMOVE_PARTICIPANT} from \"./reducer/reducer\";\n\nconst App = () => {\n    const state = useSelector(state => state)\n    const participants = state.participants\n    const [pairs, setPairs] = useState([]);\n    const dispatch = useDispatch()\n    const [participantColors, setParticipantColors] = useState({});\n    const [displayNotification, setDisplayNotification] = useState(\"none\");\n    const [notification, setNotification] = useState({show: false, text: \"\"});\n\n    const configurePairs = result => {\n        setPairs(result)\n        setParticipantColors(getParticipantColors(result[0]))\n    }\n\n    initializeSessions(dispatch, pairs, configurePairs, state)\n\n    const onShareButtonClick = () => {\n        const input = document.body.appendChild(document.createElement(\"input\"));\n        input.value = window.location\n        input.focus();\n        input.select();\n        document.execCommand('copy');\n        input.parentNode.removeChild(input);\n        window.scrollTo(0, 0)\n        setNotification({show: true, text: \"Link copied to clipboard! Session will be valid for 24hours!\"})\n    }\n\n    const onClearButtonClick = () => {\n        participants.map(participant => dispatch({\n            type: REMOVE_PARTICIPANT,\n            participant: participant\n        }))\n        setPairs([])\n        storeSession([], state.id)\n        setNotification({show: true, text: \"Removed all participants!\"})\n    }\n\n    const onPairButtonClick = () => {\n\n        if (participants.length < 3) {\n            setNotification({show: true, text: \"Less than 3 participants is not supported!\"})\n            return\n        }\n\n        if (participants.length > 14) {\n            setNotification({show: true, text: \"More than 14 participants is not supported!\"})\n            return\n        }\n\n        if (participants.includes(\"Wait\")) {\n            setNotification({show: true, text: \"Wait is reserved word, please remove it from list of participants\"})\n            return\n        }\n\n        if (participants.length !== 0) {\n            setDisplayNotification(\"block\")\n            setTimeout(function () {\n                return matcher([...participants])\n                    .then(result => {\n                        configurePairs(result)\n                        console.log(state)\n                        storeSession(result, state.sessionId)\n                    })\n                    .then(_ => setDisplayNotification(\"none\"))\n                    .catch(_ => {\n                        setNotification({\n                            show: true,\n                            text: \"We are having issue computing this! Please try again or try with less participants.\"\n                        })\n                        setDisplayNotification(\"none\")\n                    })\n            }, 500);\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <Loading display={displayNotification}/>\n            <div className=\"middle\">\n                <Notification\n                    notification={notification}\n                    setNotification={setNotification}\n                />\n                <FeedbackParticipants/>\n                <div className=\"tooltip-container\">\n                    <span className=\"tooltip\">add participant</span>\n                    <img className=\"enter-button\" src={process.env.PUBLIC_URL + '/enter-key.png'} alt=\"enter key\"/>\n                </div>\n                <Button\n                    className=\"create-pairs-button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => onPairButtonClick()}>\n                    Pair\n                </Button>\n                <Button\n                    className=\"clear-pairs-button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => onClearButtonClick()}>\n                    Clear\n                </Button>\n                <Button\n                    className=\"share-pairs-button\"\n                    variant=\"contained\"\n                    color=\"default\"\n                    onClick={() => onShareButtonClick()}>\n                    Share\n                </Button>\n\n            </div>\n            <Schedule schedule={pairs} colors={participantColors}/>\n        </div>\n    );\n}\n\nexport default App;\n","export const getParticipantColors = pairs => {\n    let assignedColors = {}\n\n    const colorList = [\n        '#b9f261',\n        '#f76865',\n        '#41a6f6',\n        '#fae058',\n        '#73eff7',\n        '#94b0c2',\n        '#99b851',\n        '#bf585e',\n        '#61f2ca',\n        '#51b892',\n        '#ffbf54',\n        '#f4f4f4',\n        '#ffcd75',\n        '#38b764',\n    ]\n\n    let counter = 0\n    pairs.forEach(pair=> {\n        pair.forEach(participant=> {\n            assignedColors[participant] = colorList[counter]\n            counter++\n        })\n    })\n    return assignedColors\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux';\nimport Reducer from \"./reducer/reducer\";\n\nconst store = createStore(\n    Reducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}